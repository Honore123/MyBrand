const express = require("express");
const authController = require("../controllers/authController");
const authRouter = express.Router();

/**
 * @swagger
 * components:
 *    schema:
 *      Auth:
 *        type: object
 *        required:
 *          -id
 *          -name
 *          -email
 *          -password
 *        properties:
 *          id:
 *              type: string
 *              description: autogenerated user Id
 *          name:
 *              type: string
 *              description: Names of the user
 *          email:
 *              type: string
 *              description: Address email of the user
 *          password:
 *              type: string
 *              description: Plain text password
 *        example:
 *          id: 6408346dd82cffa860074222
 *          name: Administrator
 *          email: example@gmail.com
 *          password: password
 */

authRouter.get("/profile", authController.profile);
authRouter.post("/admin/signup", authController.signup);
/**
 * @swagger
 * tags:
 *  name: Auth
 *  description: Authnetication APIs
 * /login:
 *  post:
 *   summary: Login user
 *   tags: [Auth]
 *   requestBody:
 *      required: true
 *      content:
 *        application/json:
 *          schema:
 *              type: object
 *              properties:
 *                email:
 *                  type: string
 *                password:
 *                  type: string
 *              example:
 *                email: admin@honore.com
 *                password: password
 *   responses:
 *    200:
 *      description: Login a user
 *      content:
 *        application/json:
 *          schema:
 *            type: object
 *            properties:
 *                data:
 *                  type: object
 *                status:
 *                  type: integer
 *                message:
 *                  type: string
 *            example:
 *                data:
 *                   {
 *                       user: 6408579a4f512c67069166c1
 *                   }
 *                status: 200
 *                message: "logged in successfully"
 *    400:
 *      description: Authnetication error
 *      content:
 *        application/json:
 *          schema:
 *            type: object
 *            properties:
 *                errors:
 *                  type: object
 *                status:
 *                  type: integer
 *                message:
 *                  type: string
 *            example:
 *                errors: {
 *                      "name": "error message",
 *                       "email": "error message",
 *                       "password": "error message"
 *                   }
 *                status: 400
 *                message: "You're not logged in"
 */
authRouter.post("/login", authController.login);

/**
 * @swagger
 * tags:
 *  name: Auth
 *  description: Authnetication APIs
 * /logout:
 *  post:
 *   summary: Logout user
 *   tags: [Auth]
 *   responses:
 *    200:
 *      description: Logout a user
 *      content:
 *        application/json:
 *          schema:
 *            type: object
 *            properties:
 *                status:
 *                  type: integer
 *                message:
 *                  type: string
 *            example:
 *                status: 200
 *                message: "Successfully logged out"
 */
authRouter.post("/logout", authController.logout);

module.exports = authRouter;
